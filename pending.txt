texto personalizado cuando está accediendo a interfaces de creación, edición, y otras interfaces (modales)

mensajes personalizados de respuesta desde el servidor

corregir que cuando creo, actualizo data, la informacion guardada en las variables de sesion campo token, no se guarda







- establecer superioridad entre roles, evitar ciclos
	* si rol x < rol z, entonces usuario con rol x solo puede asignar roles <= rol x en creacion/edicion de usuarios (incluyendo el mismo)
- captcha para exceso de logins invalidos, bloqueo temporal (por ip?+cookie? mas otra cosa?)

- boton de back (y forward) dentro de la interfaz, como alternativa al back del navegador, con el mismo comportamiento (LEER SIGUIENTE PUNTO)
- corregir siguiente proceso:
	* estoy en una seccion (luego de haber navegado por varias previas)
	* recargo LA PAGINA
	* estoy en la misma seccion otra vez, hasta aqui todo bien
	* le doy al boton back
	* cambia el slug correspondiente de la url a la seccion previa a la actual que visite ANTES DE RECARGAR LA PAGINA, pero vuelve y recarga en la seccion actual, en la que estaba CUANDO RECARGUÉ LA PAGINA

- en preferencias, indicar 
	* capacidad alerta de sistema
		- con sistema me refiero a todos los archivos del proyecto + gestor de archivos por usuario
		- se lanza una alerta cuando se detecta que se ha igualado o sobrepasado esa capacidad del sistema, esto es util cuando trabajamos en hostings compartidos, vps, sistemas que poseen caracteristicas que no podemos gestionar nosotros mismos
	* capacidad maxima del sistema
		- cuando se iguala o sobrepasa, el sistema deja de funcionar
			* se cierran todas las sesiones activas
			* se impiden nuevas actividades
			* la unica actividad permitida es la de <depuracion del sistema>
	* capacidad alerta base de datos
		- los mismos criterios descritos para sistema pero aplicados a la base de datos
	* capacidad maxima base de datos
		- los mismos criterios descritos para sistema pero aplicados a la base de datos

- comprobacion del lado del cliente con js de validez de formulario, usar signos de interrogacion y burbujas que salgan de los mismos para describir como debe ser completado un campor obligatorio

- validaciones del lado del servidor, implementar funcion en helpers.php que pase como parametro... ¿que cosa?

- eliminar cualquier rastro de style en las plantillas de vista y en la creacion dinamica de items, usar solamente clases, las clases creadas guardarlas en el archivo admin-panel.css

- aun hay terminos ya cargados a los que hay que hay que modificarles las traducciones correctamente

- formulario para filtrar datos en "Seguimiento histórico de actividades de usuario" y "Histórico de operaciones en sesión", este filtro no realiza consulta a base de datos sino que analiza la data insertada en las tablas y las compara con palabras claves y otra data ingresada pr el usuario

- En codigo, en la insercion de Operacion (cuando el usuario hace algo), personalizar por cada una el campo Info

- historial de valores y edicion (cuando, por quien, y que edito) de un item

- archivo de extensiones <=> nombre de tipo de archivo




IMPORTANTE:
	-> pensar ahora en este software como una plantilla base, y aquel que la descargue (mediante composer o algo similar), tenga la capacidad de acceder a actualizaciones, actualizandose solo los modulos base (cualquier cambio que ese usuario haya hecho a esos modulos base en su actualizacion previa o instalacion, se perderian, porque serian sobreescritos por las versiones actualizadas de los archivos)